name: Build and Deploy Pygame Web Game

on:
  push:
    branches: [ main, feature/github-pages-play ]
  pull_request:
    branches: [ main ]

permissions:
  contents: read
  pages: write
  id-token: write

concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  build:
    runs-on: ubuntu-latest-8-cores  # 8コア版でさらに高速化
    timeout-minutes: 0              # タイムアウト無制限

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.11'

    - name: Cache pip & pygbag
      uses: actions/cache@v4
      with:
        path: |
          ~/.cache/pip
          ~/.pygbag
        key: ${{ runner.os }}-pip-${{ hashFiles('**/requirements*.txt') }}-pygbag

    - name: Install dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y ffmpeg
        python -m pip install --upgrade pip
        pip install black pygame-ce pygbag

    - name: Build with pygbag
      timeout-minutes: 0         # ステップ側もタイムアウト無制限
      run: |
        echo "Starting pygbag build..."
        # 10 秒ごとにドットを出力して無出力タイムアウトを防止
        (while sleep 10; do echo "::notice file=build::working…"; done) &
        keepalive=$!
        python -u -m pygbag --width 1000 --height 600 --no_opt main.py
        kill $keepalive
        echo "Build completed"
        ls -R dist || echo "dist not found"

    - name: Setup Pages
      uses: actions/configure-pages@v4

    - name: Upload artifact
      uses: actions/upload-pages-artifact@v3
      with:
        path: './dist'

  deploy:
    needs: build
    runs-on: ubuntu-latest
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
      - id: deployment
        uses: actions/deploy-pages@v4